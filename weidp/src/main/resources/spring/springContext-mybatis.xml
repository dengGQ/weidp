<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"  
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
       xmlns:context="http://www.springframework.org/schema/context"  
       xmlns:aop="http://www.springframework.org/schema/aop"  
       xmlns:tx="http://www.springframework.org/schema/tx"  
       xsi:schemaLocation="http://www.springframework.org/schema/beans  
           http://www.springframework.org/schema/beans/spring-beans.xsd  
           http://www.springframework.org/schema/context  
           http://www.springframework.org/schema/context/spring-context.xsd  
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd  
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
           
           
     
	 <!-- 可以把扫描到的Mapper接口变成Mapper对象-->  
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSourceRWORR" />
		<!-- 自动扫描entity目录, 省掉Configuration.xml里的手工配置 -->
		<!-- <property name="typeAliasesPackage">
			<value>com.hhr.demo.usertest.entity</value>
		</property> -->
		
		<!-- <property name="mapperLocations" value="classpath:com/fotic/test/mapper/*/*.xml" /> -->
		<!-- 开启缓存支持 -->
		<!-- <property name="configurationProperties">
			<props>
				<prop key="cacheEnabled">true</prop>
				查询时，关闭关联对象即时加载以提高性能
				<prop key="lazyLoadingEnabled">false</prop>
				设置关联对象加载的形态，此处为按需加载字段(加载字段由SQL指定)，不会加载关联表的所有字段，以提高性能
				<prop key="aggressiveLazyLoading">true</prop>
				对于未知的SQL查询，允许返回不同的结果集以达到通用的效果
				<prop key="multipleResultSetsEnabled">true</prop>
				允许使用列标签代替列名
				<prop key="useColumnLabel">true</prop>
				允许使用自定义的主键值(比如由程序生成的UUID 32位编码作为键值)，数据表的PK生成策略将被覆盖
				<prop key="useGeneratedKeys">true</prop>
				给予被嵌套的resultMap以字段-属性的映射支持
				<prop key="autoMappingBehavior">FULL</prop>
				对于批量更新操作缓存SQL以提高性能
				<prop key="defaultExecutorType">BATCH</prop>
				数据库超过25000秒仍未响应则超时
				<prop key="defaultStatementTimeout">25000</prop>
			</props>
		</property> -->
		<property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageHelper">
                    <property name="properties">
                        <value>
                            dialect=oracle
                            <!-- 该参数默认为false -->  
				            <!-- 设置为true时，会将RowBounds第一个参数offset当成pageNum页码使用 -->  
				            <!-- 和startPage中的pageNum效果一样-->  
                            offsetAsPageNum=true
                            <!-- 该参数默认为false -->  
		            		<!-- 设置为true时，使用RowBounds分页会进行count查询 -->  
                            rowBoundsWithCount=true
                            <!-- 设置为true时，如果pageSize=0或者RowBounds.limit = 0就会查询出全部的结果 -->  
		            		<!-- （相当于没有执行分页查询，但是返回结果仍然是Page类型）-->  
                            pageSizeZero=true
                            <!-- 3.3.0版本可用 - 分页参数合理化，默认false禁用 -->  
				            <!-- 启用合理化时，如果pageNum<1会查询第一页，如果pageNum>pages会查询最后一页 -->  
				            <!-- 禁用合理化时，如果pageNum<1或pageNum>pages会返回空数据 --> 
                            reasonable=true
                            <!-- 3.5.0版本可用 - 为了支持startPage(Object params)方法 -->  
				            <!-- 增加了一个`params`参数来配置参数映射，用于从Map或ServletRequest中取值 -->  
				            <!-- 可以配置pageNum,pageSize,count,pageSizeZero,reasonable,orderBy,不配置映射的用默认值 -->  
				            <!-- 不理解该含义的前提下，不要随便复制该配置 -->  
                            params=pageNum=start;pageSize=limit;
                             <!-- 支持通过Mapper接口参数来传递分页参数 -->  
                            supportMethodsArguments=pageNum=start;pageSize=limit;
                            <!-- always总是返回PageInfo类型,check检查返回类型是否为PageInfo,none返回Page -->  
                            returnPageInfo=check
                        </value>
                    </property>
                </bean>
            </array>
        </property>
	</bean>
	
	<bean id="sqlSession"     class="org.mybatis.spring.SqlSessionTemplate">   
          <constructor-arg index="0" ref="sqlSessionFactory" />   
    </bean> 

	<bean class="tk.mybatis.spring.mapper.MapperScannerConfigurer">
	  <property name="basePackage" value="com.hhr.**.dao"/>
	  <property name="markerInterface" value="tk.mybatis.mapper.common.Mapper"/>
	  <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>  
	  <property name="properties">
        <value>
        	IDENTITY=select RHZX_SEQ_NO.nextval from dual
            ORDER=BEFORE
        </value>
    </property>
	</bean>
 
 
	<!-- 配置事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSourceRWORR" />
	</bean>
	<!-- 切换数据源 -->
	<bean id="dataSourceAdvice" class="com.hhr.common.dataswitch.DataSourceAdvice">
		<property name="sourceMap">
			<map>
				<entry key="update"
					value="(add.*)|(create.*)|(save.*)|(insert.*)|(update.*)|(del.*)|(delete.*)|(remove.*)" />
			</map>
		</property>
	</bean>
	<aop:config>
		<aop:advisor pointcut="execution(* com.hhr..service..*Impl.*(..))"
			advice-ref="dataSourceAdvice" order="1" />
	</aop:config> 

	<!-- 拦截器方式配置事物 -->
	<tx:advice id="transactionAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="get*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="find*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="select*" propagation="SUPPORTS" read-only="true" />

		</tx:attributes>
	</tx:advice>
	<!-- Spring aop事务管理 -->
	<aop:config>
		<aop:pointcut id="transactionPointcut"
			expression="execution(* com.hhr..service..*Impl.*(..))" />
		<aop:advisor pointcut-ref="transactionPointcut"
			advice-ref="transactionAdvice" order="2" />
	</aop:config>

</beans>